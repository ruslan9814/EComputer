name: "test"

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Шаг 1: Клонирование репозитория
      - name: Checkout Code
        uses: actions/checkout@v4

      # Шаг 2: Установка .NET SDK
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      # Шаг 3: Кэширование NuGet-пакетов
      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/global.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      # Шаг 4: Восстановление зависимостей
      - name: Restore Dependencies
        run: dotnet restore ./test.sln

      # Шаг 5: Сборка проекта
      - name: Build Project
        run: dotnet build ./test.sln --no-restore

      # Шаг 6: Запуск тестов
      - name: Run Tests
        run: dotnet test ./test.sln --no-build

      # Шаг 7: Уведомление Telegram об успешной сборке
      - name: Telegram Notification (Success)
        if: success()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: "✅ Сборка завершена успешно!"
          debug: true

      # Шаг 8: Уведомление Telegram о неудачной сборке
      - name: Telegram Notification (Failure)
        if: failure()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_BOT_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: "❌ Ошибка сборки! Проверьте лог."
          debug: true
